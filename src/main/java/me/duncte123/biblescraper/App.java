/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package me.duncte123.biblescraper;

import me.duncte123.biblescraper.scrapers.PhrasesOrgScraper;
import me.duncte123.biblescraper.scrapers.SaidWhatScraper;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

/**
 * @author duncte123
 * Created on 04-11-2019
 */
public class App {
    private App() throws IOException {
        new PhrasesOrgScraper("https://www.phrases.org.uk/meanings/phrases-and-sayings-list.html", "parts/sayings.txt");
        new PhrasesOrgScraper("https://www.phrases.org.uk/meanings/proverbs.html", "parts/proverbs.txt");
        new SaidWhatScraper("http://www.saidwhat.co.uk/proverb/viewall.php", "parts/proverbs-2.txt");

        combineFiles(
                "parts/sayings.txt",
                "parts/proverbs.txt",
                "parts/proverbs-2.txt"
        );
    }

    /**
     * Combines all files into one big file for the AI to train on
     *
     * @param filenames
     *         The names of the files to combine into the output
     *
     * @throws IOException
     *         When a disk error occurs
     */
    private void combineFiles(String... filenames) throws IOException {
        Set<String> finalFile = new HashSet<>();
        File output = new File("output.txt");

        if (output.exists()) {
            output.delete();
        }

        output.createNewFile();

        for (String filename : filenames) {
            File f = new File(filename);
            finalFile.addAll(
                    Files.readAllLines(f.toPath())
            );
        }

        try (FileWriter fw = new FileWriter(output, StandardCharsets.UTF_8)) {
            try (BufferedWriter writer = new BufferedWriter(fw)) {
                finalFile.stream()
                        .sorted()
                        .collect(Collectors.toList())
                        .forEach((s) -> {
                            try {
                                writer.write(s);
                                writer.write("\n");
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        });
            }
        }
    }

    public static void main(String[] args) throws IOException {
        new App();
    }
}
